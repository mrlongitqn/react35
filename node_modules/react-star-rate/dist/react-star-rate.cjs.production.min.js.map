{"version":3,"file":"react-star-rate.cjs.production.min.js","sources":["../src/star.tsx","../src/stars-rating.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { css, CSSAttribute } from 'goober';\r\n\r\nexport interface StarProps {\r\n  allowHalf?: boolean;\r\n  classNamePrefix?: string;\r\n  count?: number;\r\n  disabled?: boolean;\r\n  index?: number;\r\n  onClick?: (e: React.MouseEvent<HTMLLIElement>, index: number) => void;\r\n  onHover?: (e: React.MouseEvent<HTMLLIElement>, index: number) => void;\r\n  reverse?: boolean;\r\n  style?: { full?: CSSAttribute; half?: CSSAttribute; zero?: CSSAttribute };\r\n  styleFull?: { first?: CSSAttribute; second?: CSSAttribute };\r\n  styleFullHover?: { first?: CSSAttribute; second?: CSSAttribute };\r\n  styleHalf?: { first?: CSSAttribute; second?: CSSAttribute };\r\n  styleHalfHover?: { first?: CSSAttribute; second?: CSSAttribute };\r\n  styleHover?: {\r\n    full?: CSSAttribute;\r\n    half?: CSSAttribute;\r\n    zero?: CSSAttribute;\r\n  };\r\n  styleZero?: { first?: CSSAttribute; second?: CSSAttribute };\r\n  styleZeroHover?: { first?: CSSAttribute; second?: CSSAttribute };\r\n  symbol?: React.ReactNode;\r\n  value?: number;\r\n}\r\n\r\nexport class Star extends React.Component<StarProps> {\r\n  starRef?: HTMLLIElement | null;\r\n\r\n  onClick: React.MouseEventHandler<HTMLLIElement> = e => {\r\n    const { index, onClick } = this.props;\r\n    onClick!(e, index!);\r\n  };\r\n\r\n  onHover: React.MouseEventHandler<HTMLLIElement> = e => {\r\n    const { index, onHover } = this.props;\r\n    onHover!(e, index!);\r\n  };\r\n\r\n  getStarType = () => {\r\n    const { allowHalf, index, value } = this.props;\r\n    const starValue = index! + 1;\r\n\r\n    if (allowHalf && value! + 0.5 >= starValue && value! < starValue) {\r\n      return 'half';\r\n    } else if (starValue <= value!) {\r\n      return 'full';\r\n    }\r\n\r\n    return 'zero';\r\n  };\r\n\r\n  getValue = (x: number, reverse: boolean) => {\r\n    const { allowHalf, index } = this.props;\r\n    let value = index! + 1;\r\n    if (allowHalf) {\r\n      const doc = this.starRef!.ownerDocument;\r\n      const { body } = doc!;\r\n      const docElem = doc.documentElement;\r\n      const box = this.starRef?.getBoundingClientRect();\r\n      let left = box?.left;\r\n      left! -= docElem?.clientLeft || body.clientLeft || 0;\r\n      const w: Window = doc.defaultView || (doc as any).parentWindow;\r\n      let ret = w.pageXOffset;\r\n      const method = 'scrollLeft';\r\n      if (typeof ret !== 'number') {\r\n        ret = doc.documentElement[method];\r\n        if (typeof ret !== 'number') {\r\n          ret = doc.body[method];\r\n        }\r\n      }\r\n      left! += ret;\r\n      const width = this.starRef?.clientWidth;\r\n      if (!reverse && x - left! < width! / 2) {\r\n        value -= 0.5;\r\n      } else if (reverse && x - left! > width! / 2) {\r\n        value -= 0.5;\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classNamePrefix,\r\n      count,\r\n      disabled,\r\n      index,\r\n      reverse,\r\n      style,\r\n      styleFull,\r\n      styleFullHover,\r\n      styleHalf,\r\n      styleHalfHover,\r\n      styleHover,\r\n      styleZero,\r\n      styleZeroHover,\r\n      symbol,\r\n      value,\r\n    } = this.props;\r\n\r\n    const symbolNode =\r\n      typeof symbol === 'function' ? symbol(this.props) : symbol;\r\n\r\n    const starType = this.getStarType();\r\n\r\n    const classNameMap = {\r\n      zero: `${classNamePrefix}__star--zero`,\r\n      half: `${classNamePrefix}__star--half`,\r\n      full: `${classNamePrefix}__star--full`,\r\n    };\r\n    const className = `${classNamePrefix}__star ${classNameMap[starType]}`;\r\n\r\n    const styleMap = { zero: styleZero, full: styleFull, half: styleHalf };\r\n    const styleHoverMap = {\r\n      zero: styleZeroHover,\r\n      full: styleFullHover,\r\n      half: styleHalfHover,\r\n    };\r\n\r\n    const FirstStarStyles = css`\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 50%;\r\n      height: 100%;\r\n      overflow: hidden;\r\n      opacity: 0;\r\n      transition: all 500ms ease;\r\n    `;\r\n\r\n    const FirstStarHoverStyles = css({\r\n      '&:hover': styleHoverMap[starType]?.first,\r\n    });\r\n\r\n    const SecondStarHoverStyles = css({\r\n      '&:hover': styleHoverMap[starType]?.second,\r\n    });\r\n\r\n    const StarActiveStyles = {\r\n      zero: '',\r\n      half: css`\r\n        .${FirstStarStyles} {\r\n          opacity: 1;\r\n          color: #ffd166;\r\n        }\r\n\r\n        &:hover {\r\n          .${FirstStarStyles} {\r\n            color: #ffe3a2;\r\n          }\r\n        }\r\n      `,\r\n      full: css`\r\n        color: #ffd166 !important;\r\n\r\n        &:hover {\r\n          color: #ffe3a2;\r\n        }\r\n      `,\r\n    };\r\n\r\n    const StarStyles = css`\r\n      margin: 0;\r\n      padding: 0;\r\n      display: inline-block;\r\n      margin-right: 8px;\r\n      position: relative;\r\n      color: #e8eaeb;\r\n      cursor: pointer;\r\n      transition: all 500ms ease;\r\n      ${reverse\r\n        ? `\r\n        margin-right: 0;\r\n        margin-left: 8px;\r\n        float: right;\r\n\r\n        .${FirstStarStyles} {\r\n            right: 0;\r\n            left: auto;\r\n        }\r\n      `\r\n        : ``}\r\n    `;\r\n\r\n    const StarHoverStyles = css({\r\n      '&:hover': styleHover![starType],\r\n    });\r\n\r\n    return (\r\n      <li\r\n        aria-checked={value! > index! ? 'true' : 'false'}\r\n        aria-label={`${index! + 1} out of ${count} stars`}\r\n        aria-posinset={index! + 1}\r\n        aria-setsize={count}\r\n        className={`${className} ${StarStyles} ${StarHoverStyles} ${StarActiveStyles[starType]}`}\r\n        onClick={disabled ? undefined : this.onClick}\r\n        onMouseMove={disabled ? undefined : this.onHover}\r\n        ref={ref => {\r\n          this.starRef = ref;\r\n        }}\r\n        role=\"radio\"\r\n        style={style![starType]}\r\n        tabIndex={disabled ? -1 : 0}\r\n      >\r\n        <div\r\n          aria-hidden=\"true\"\r\n          className={`${classNamePrefix}__star__first ${FirstStarStyles} ${FirstStarHoverStyles}`}\r\n          style={styleMap[starType]?.first}\r\n        >\r\n          {symbolNode}\r\n        </div>\r\n        <div\r\n          aria-hidden=\"true\"\r\n          className={`${classNamePrefix}__star__second ${SecondStarHoverStyles}`}\r\n          style={styleMap[starType]?.second}\r\n        >\r\n          {symbolNode}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Star;\r\n","import * as React from 'react';\r\n\r\nimport { setup, css, CSSAttribute } from 'goober';\r\nimport { prefix } from 'goober/prefixer';\r\n\r\nimport Star from './star';\r\n\r\nsetup(React.createElement, prefix);\r\n\r\nconst noop = () => {};\r\n\r\nexport interface StarsRatingProps {\r\n  allowClear?: boolean;\r\n  allowHalf?: boolean;\r\n  autoFocus?: boolean;\r\n  classNamePrefix?: string;\r\n  count?: number;\r\n  defaultValue?: number;\r\n  direction?: 'ltr' | 'rtl';\r\n  disabled?: boolean;\r\n  onBlur?: () => void;\r\n  onChange?: (value?: number) => void;\r\n  onFocus?: () => void;\r\n  onHoverChange?: (value?: number) => void;\r\n  style?: StarsRatingStyles;\r\n  symbol?: React.ReactNode;\r\n  tabIndex?: number;\r\n  value?: number;\r\n}\r\n\r\ntype StarsRatingStyles = {\r\n  style?: CSSAttribute;\r\n  full?: {\r\n    first?: CSSAttribute;\r\n    second?: CSSAttribute;\r\n    star?: CSSAttribute;\r\n  };\r\n  half?: {\r\n    first?: CSSAttribute;\r\n    second?: CSSAttribute;\r\n    star?: CSSAttribute;\r\n  };\r\n  zero?: {\r\n    first?: CSSAttribute;\r\n    second?: CSSAttribute;\r\n    star?: CSSAttribute;\r\n  };\r\n  hover?: Omit<StarsRatingStyles, 'hover'>;\r\n};\r\n\r\ninterface StarsRatingState {\r\n  clearedValue?: number;\r\n  hoverValue?: number;\r\n  value?: number;\r\n}\r\n\r\nclass StarsRating extends React.Component<StarsRatingProps, StarsRatingState> {\r\n  static defaultProps = {\r\n    allowClear: true,\r\n    allowHalf: true,\r\n    classNamePrefix: 'react-star-rate',\r\n    count: 5,\r\n    defaultValue: 0,\r\n    direction: 'ltr',\r\n    disabled: false,\r\n    onChange: noop,\r\n    onHoverChange: noop,\r\n    style: {},\r\n    symbol: 'â˜…',\r\n    tabIndex: 0,\r\n  };\r\n\r\n  ratingContainerRef?: HTMLUListElement | null;\r\n\r\n  starRefs?: { [key: number]: Star };\r\n\r\n  constructor(props: StarsRatingProps) {\r\n    super(props);\r\n\r\n    const { defaultValue, value } = props;\r\n\r\n    this.starRefs = {};\r\n\r\n    this.state = {\r\n      value: value ?? defaultValue,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { autoFocus, disabled } = this.props;\r\n    if (autoFocus && !disabled) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(\r\n    nextProps: StarsRatingProps,\r\n    state: StarsRatingState\r\n  ) {\r\n    if ('value' in nextProps && nextProps.value !== undefined) {\r\n      return {\r\n        ...state,\r\n        value: nextProps.value,\r\n      };\r\n    }\r\n    return state;\r\n  }\r\n\r\n  onHover = (event: React.MouseEvent<HTMLLIElement>, index: number) => {\r\n    const { onHoverChange } = this.props;\r\n    const { clearedValue } = this.state;\r\n    const hoverValue = this.getStarValue(index, event.pageX);\r\n    if (hoverValue !== clearedValue) {\r\n      this.setState({\r\n        hoverValue,\r\n        clearedValue: undefined,\r\n      });\r\n    }\r\n    onHoverChange!(hoverValue);\r\n  };\r\n\r\n  onMouseLeave = () => {\r\n    const { onHoverChange } = this.props;\r\n    this.setState({\r\n      hoverValue: undefined,\r\n      clearedValue: undefined,\r\n    });\r\n    onHoverChange!(undefined);\r\n  };\r\n\r\n  onClick = (event: React.MouseEvent, index: number) => {\r\n    const { allowClear } = this.props;\r\n    const { value } = this.state;\r\n    const newValue = this.getStarValue(index, event.pageX);\r\n    const isClear = allowClear ? newValue === value : false;\r\n    this.onMouseLeave();\r\n    this.changeValue(isClear ? 0 : newValue);\r\n    this.setState({\r\n      clearedValue: isClear ? newValue : undefined,\r\n    });\r\n  };\r\n\r\n  onFocus = () => {\r\n    const { onFocus } = this.props;\r\n    onFocus && onFocus();\r\n  };\r\n\r\n  onBlur = () => {\r\n    const { onBlur } = this.props;\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  changeValue = (value: number) => {\r\n    const { onChange } = this.props;\r\n    if (!('value' in this.props)) {\r\n      this.setState({\r\n        value,\r\n      });\r\n    }\r\n    onChange!(value);\r\n  };\r\n\r\n  saveStarRef = (index: number) => (node: Star) => {\r\n    this.starRefs![index] = node;\r\n  };\r\n\r\n  getStarValue = (index: number, x: number) => {\r\n    const { direction } = this.props;\r\n    const reverse = direction === 'rtl';\r\n    return this.starRefs![index].getValue(x, reverse);\r\n  };\r\n\r\n  focus = () => {\r\n    const { disabled } = this.props;\r\n    if (!disabled) {\r\n      this.ratingContainerRef?.focus();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      allowHalf,\r\n      classNamePrefix,\r\n      count,\r\n      direction,\r\n      disabled,\r\n      style,\r\n      symbol,\r\n      tabIndex,\r\n    } = this.props;\r\n    const { hoverValue, value } = this.state;\r\n\r\n    const stars = [];\r\n    for (let index = 0; index < (count ?? 0); index++) {\r\n      stars.push(\r\n        <Star\r\n          allowHalf={allowHalf}\r\n          classNamePrefix={classNamePrefix}\r\n          count={count}\r\n          disabled={disabled}\r\n          index={index}\r\n          key={index}\r\n          ref={this.saveStarRef(index)}\r\n          onClick={this.onClick}\r\n          onHover={this.onHover}\r\n          reverse={direction === 'rtl'}\r\n          style={{\r\n            full: style?.full?.star,\r\n            half: style?.half?.star,\r\n            zero: style?.zero?.star,\r\n          }}\r\n          styleFull={style?.full}\r\n          styleFullHover={style?.hover?.full}\r\n          styleHalf={style?.half}\r\n          styleHalfHover={style?.hover?.half}\r\n          styleHover={{\r\n            full: style?.hover?.full?.star,\r\n            half: style?.hover?.half?.star,\r\n            zero: style?.hover?.zero?.star,\r\n          }}\r\n          styleZero={style?.zero}\r\n          styleZeroHover={style?.hover?.zero}\r\n          symbol={symbol}\r\n          value={hoverValue === undefined ? value : hoverValue}\r\n        />\r\n      );\r\n    }\r\n\r\n    const ListContainerStyles = css`\r\n      margin: 0;\r\n      padding: 0;\r\n      list-style: none;\r\n      font-size: 40px;\r\n      display: inline-block;\r\n      vertical-align: middle;\r\n      font-weight: normal;\r\n      font-style: normal;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\r\n        Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    `;\r\n\r\n    const ListContainerHoverStyles = css({\r\n      '&:hover': style?.hover?.style,\r\n    });\r\n\r\n    return (\r\n      <ul\r\n        aria-label=\"Stars Rating\"\r\n        className={`${classNamePrefix} ${ListContainerStyles} ${ListContainerHoverStyles} ${\r\n          direction === 'rtl'\r\n            ? `${classNamePrefix}--rtl ${css`\r\n                direction: rtl;\r\n              `}`\r\n            : `${classNamePrefix}--ltr ${css`\r\n                direction: ltr;\r\n              `}`\r\n        }`}\r\n        onBlur={this.onBlur}\r\n        onFocus={this.onFocus}\r\n        onMouseLeave={disabled ? undefined : this.onMouseLeave}\r\n        ref={ref => {\r\n          this.ratingContainerRef = ref;\r\n        }}\r\n        role=\"radiogroup\"\r\n        style={style?.style}\r\n        tabIndex={disabled ? -1 : tabIndex}\r\n      >\r\n        {stars}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StarsRating;\r\n"],"names":["Star","e","_this","props","onClick","index","onHover","value","starValue","allowHalf","x","reverse","doc","starRef","ownerDocument","body","docElem","documentElement","box","_this$starRef","getBoundingClientRect","left","clientLeft","ret","defaultView","parentWindow","pageXOffset","width","_this$starRef2","clientWidth","render","this","classNamePrefix","count","disabled","style","styleFull","styleFullHover","styleHalf","styleHalfHover","styleHover","styleZero","styleZeroHover","symbol","symbolNode","starType","getStarType","className","zero","half","full","styleMap","styleHoverMap","FirstStarStyles","css","FirstStarHoverStyles","_styleHoverMap$starTy","first","SecondStarHoverStyles","_styleHoverMap$starTy2","second","StarActiveStyles","StarStyles","StarHoverStyles","React","undefined","onMouseMove","ref","_this2","role","tabIndex","_styleMap$starType","_styleMap$starType2","setup","prefix","noop","StarsRating","event","onHoverChange","clearedValue","state","hoverValue","getStarValue","pageX","setState","allowClear","newValue","isClear","onMouseLeave","changeValue","onFocus","onBlur","onChange","node","starRefs","getValue","direction","ratingContainerRef","focus","defaultValue","componentDidMount","autoFocus","getDerivedStateFromProps","nextProps","stars","push","key","saveStarRef","_style$full","star","_style$half","_style$zero","hover","_style$hover","_style$hover2","_style$hover3","_style$hover3$full","_style$hover4","_style$hover4$half","_style$hover5","_style$hover5$zero","_style$hover6","ListContainerStyles","ListContainerHoverStyles","_style$hover7"],"mappings":"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"}